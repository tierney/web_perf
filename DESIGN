DESIGN Thoughts for SPDY with Multipath.

SPDY explicitly avoids using multiple TCP connections to a domain, which
contradicts the design choice made by modern browsers. Modern browsers may
employ up to six TCP connections to a particular domain. This is to overcome TCP
slow start behavior; by striping small requests across multiple connections,
latency may be reduced to the end-user's experience of seeing a web page
rendered. Because servers must deal with the additional burden of the six TCP
connections AND a recent strategy to increase server-side initial congestion
windows to four segments, a burst of 24 packets per request.

Beyond addressing server burden, the strategy to assuage the effects of slow
start in order to minimize end-user latency may not be the strongest design.

SPDY emphasizes the use of a single TCP connection and multiplexing the multiple
requests spawned by servers to a particular domain. By converting HTTP methods
(e.g., GETs and POSTs) to streams over a single TCP connection, the collective
web packets generated by SPDY, in addition to other efficiency-oriented
strategies employed in SPDY, demonstrate a lower latency user-experience.

But a single TCP connection implies a 4-tuple: (src IP, src port, dst IP, dst
port) that links identity with IP addresses and ports. Nevertheless, multiple
network interfaces are common features in modern mobile devices. This means that
the total bandwidth available to a single application cannot be achieved easily
in the current model of multiple IP identities.

An application may be able to leverage multiple TCP connections without
requiring the overhead of stabilizing MPTCP~\cite{mpctp-nsdi11}.

'TCP congestion window vs. application specification.' Repeat what we send
across different links but what are the energy concerns?

Application knows better than the lower layers about how to reason about
multiple connections.

----

SETTINGS frame modification.


"SETTINGS frames can be sent at any time by either endpoint, are optionally
sent, and are fully asynchronous."

                      1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +--------------------------------------------------------------+
 |                                                              |
 +----------------+---------------------------------------------+
 | Flags          | Length                                      |
 +----------------+---------------------------------------------+
 |         Number of Entries                                    |
 +----------------+---------------------------------------------+
 | ID.flags       |  Unique ID                                  |
 +----------------+---------------------------------------------+
 | Value                                                        |
 +--------------------------------------------------------------+
 |                                                              |
 |                                                              |
 +--------------------------------------------------------------+




